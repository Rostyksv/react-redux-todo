[{"F:\\node\\react-redux-todo\\react-redux-todo\\src\\App.js":"1","F:\\node\\react-redux-todo\\react-redux-todo\\src\\actions\\index.js":"2","F:\\node\\react-redux-todo\\react-redux-todo\\src\\components\\Switcher.js":"3","F:\\node\\react-redux-todo\\react-redux-todo\\src\\components\\Todo.js":"4","F:\\node\\react-redux-todo\\react-redux-todo\\src\\reportWebVitals.js":"5","F:\\node\\react-redux-todo\\react-redux-todo\\src\\components\\Todos.js":"6","F:\\node\\react-redux-todo\\react-redux-todo\\src\\index.js":"7","F:\\node\\react-redux-todo\\react-redux-todo\\src\\reducers\\allReducers.js":"8","F:\\node\\react-redux-todo\\react-redux-todo\\src\\reducers\\addTodoReducer.js":"9"},{"size":1809,"mtime":1616337385087,"results":"10","hashOfConfig":"11"},{"size":409,"mtime":1616337385658,"results":"12","hashOfConfig":"11"},{"size":327,"mtime":1616338169263,"results":"13","hashOfConfig":"11"},{"size":1520,"mtime":1616338181063,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1615750549564,"results":"15","hashOfConfig":"11"},{"size":690,"mtime":1616338205985,"results":"16","hashOfConfig":"11"},{"size":741,"mtime":1616337388466,"results":"17","hashOfConfig":"11"},{"size":195,"mtime":1616337387542,"results":"18","hashOfConfig":"11"},{"size":708,"mtime":1616337386783,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1v3tnmj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"F:\\node\\react-redux-todo\\react-redux-todo\\src\\App.js",["42","43"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Todos from './components/Todos';\nimport Switcher from './components/Switcher';\n\nimport { addTodo } from './actions';\n\nfunction App() {\n\n  const [text, setText] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  const [darkTheme, setDarkTheme] = useState(false);\n  const dispatch = useDispatch();\n  const handleInput = (e) => {\n    e.preventDefault();\n    setText(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(!text) {\n      setShowAlert(true);\n      setTimeout(() => {\n        setShowAlert(false);\n      }, 5000)\n    }\n    else{\n      dispatch(addTodo(text));\n      setText('');\n    }\n  };\n\n  return (\n    <div className={darkTheme ? \"bgcolor darkTheme\" : \"bgcolor whiteTheme\"}>\n      <div className='container'>\n        <Switcher darkTheme={darkTheme} setDarkTheme={setDarkTheme} />\n          <div className={showAlert ? \"alert alert-danger alert-show\" : 'alert-hidden'} role=\"alert\">\n            <span>Error! Write something please :\\</span>\n            <button onClick={() => setShowAlert(false)} style={{background:'transparent', outline:'none', border:'none'}}>X</button>\n          </div>\n            <form className='input-group mb-3' onSubmit={(e) => handleSubmit(e)}>\n              <input value={text} onChange={((e) => handleInput(e))} type=\"text\" className='form-control' placeholder=\"Enter Todo\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n              <button type=\"submit\" className=\"btn btn-outline-secondary\" id=\"button-addon2\">Add</button>\n            </form>\n        <Todos />\n      </div>\n    </div>\n  );\n}\nexport default App;\n","F:\\node\\react-redux-todo\\react-redux-todo\\src\\actions\\index.js",[],"F:\\node\\react-redux-todo\\react-redux-todo\\src\\components\\Switcher.js",["44"],"import React, { useEffect } from 'react';\r\n\r\nconst Switcher = ({darkTheme, setDarkTheme}) => {\r\n    return (\r\n        <div className=\"Switcher\">\r\n            <input onChange={() => setDarkTheme(!darkTheme)} type=\"checkbox\" id=\"switch\" /><label for=\"switch\">Toggle</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Switcher;\r\n","F:\\node\\react-redux-todo\\react-redux-todo\\src\\components\\Todo.js",["45","46"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {useState} from 'react';\r\nimport {delTodo, editTodo} from '../actions';\r\n\r\nfunction Todo({ todo }) {\r\n    const [edit, setEdit] = useState(false);\r\n    const {id, item} = todo;\r\n    const [text, setText] = useState(item);\r\n    const [done, setDone] = useState(false);\r\n    console.log(text + ' now');\r\n    function handleEdit(e) {\r\n        e.preventDefault();\r\n        setText(e.target.value);\r\n    }\r\n    useEffect(() => {\r\n        if(edit === false && text !== item) {\r\n            dispatch(editTodo({item: text, id}));\r\n        }\r\n        setText(item);\r\n    }, [edit])\r\n\r\n    const dispatch = useDispatch();\r\n    return (\r\n    <div>\r\n    <div className=\"Todo\">\r\n            <h3>#{id+1}</h3>\r\n            <input type='checkbox' onChange={() => {setDone(!done)}} className='todo-check'></input>\r\n        <h3>{edit ? <input className=\"form-control\" onChange={((e) => handleEdit(e))} value={text} type='text'></input> : <div style={{maxWidth:'50rem', wordWrap:'break-word'}}><span className={done ? 'todo-check-done' : ''}>{item}</span></div>}</h3>\r\n        <div className=\"Todos-btns\">\r\n            <button onClick={() => setEdit(!edit)} className='btn btn-primary mr-3'>{edit ? 'Save' : 'Edit'}</button>\r\n            <button onClick={() => dispatch(delTodo(id))} className='btn btn-danger' disabled={edit ? true : false} >Delete</button>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","F:\\node\\react-redux-todo\\react-redux-todo\\src\\reportWebVitals.js",[],"F:\\node\\react-redux-todo\\react-redux-todo\\src\\components\\Todos.js",[],"F:\\node\\react-redux-todo\\react-redux-todo\\src\\index.js",[],"F:\\node\\react-redux-todo\\react-redux-todo\\src\\reducers\\allReducers.js",[],"F:\\node\\react-redux-todo\\react-redux-todo\\src\\reducers\\addTodoReducer.js",["47"],"export default function addTodoReducer(state = [], action) {\r\n    switch(action.type){\r\n        case 'ADD_TODO':\r\n            return [...state, {item: action.payload, id: state.length == 0 ? 0 : state[state.length-1].id+1}];\r\n        case 'DEL_TODO':\r\n             return state.filter(el => el.id !== action.payload).map((el, i) => {return {item: el.item, id: i}})\r\n        case 'EDIT_TODO':\r\n            return state.map((el,i) => {\r\n                if(el.id === action.payload.id) {\r\n                    el.item = action.payload.item;\r\n                }\r\n                return el;\r\n            });\r\n        case 'CLEAR_TODOS':\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"48","severity":1,"message":"49","line":3,"column":16,"nodeType":"50","messageId":"51","endLine":3,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":4,"column":23,"nodeType":"50","messageId":"51","endLine":4,"endColumn":34},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":26},{"ruleId":"48","severity":1,"message":"52","line":2,"column":23,"nodeType":"50","messageId":"51","endLine":2,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":21,"column":8,"nodeType":"55","endLine":21,"endColumn":14,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":71,"nodeType":"59","messageId":"60","endLine":4,"endColumn":73},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'id', 'item', and 'text'. Either include them or remove the dependency array.","ArrayExpression",["61"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"62","fix":"63"},"Update the dependencies array to be: [dispatch, edit, id, item, text]",{"range":"64","text":"65"},[672,678],"[dispatch, edit, id, item, text]"]